{"ast":null,"code":"import baseUrl from '@/services/BaseUrl';\nconst url = baseUrl.urlApiRollCall + \"Persons\";\nexport default {\n  async getPersonsAsync() {\n    var persons;\n    await fetch(url).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error en la solicitud.');\n        //console.log(response.text())\n        //throw response.text()\n      }\n    }).then(data => {\n      //console.log(data)\n      persons = data;\n    }).catch(error => {\n      throw error;\n    });\n    return persons;\n  },\n  async setPersonAsync(person) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"accept\", \"*/*\");\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      //\"name\": person.name,\n      \"lastName\": person.lastName,\n      \"genere\": person.genere,\n      \"birthday\": person.birthday\n    });\n    await fetch(url, {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log(\"No es ok\");\n        console.log(response.json().errors);\n        console.log(response.text());\n        //   response.text().then(errorMessage => {\n        //     console.error('Mensaje de error:', errorMessage)\n        //   })\n        //  throw new Error('Error en la solicitud.', response);\n        //throw response.text()\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n      throw error;\n    });\n  }\n};","map":{"version":3,"names":["baseUrl","url","urlApiRollCall","getPersonsAsync","persons","fetch","then","response","ok","json","Error","data","catch","error","setPersonAsync","person","myHeaders","Headers","append","raw","JSON","stringify","lastName","genere","birthday","method","headers","body","console","log","errors","text"],"sources":["C:/Users/vmartinez/source/repos/RollCall/rollcall-vue/src/services/PersonsService.js"],"sourcesContent":["import baseUrl from '@/services/BaseUrl'\r\nconst url = baseUrl.urlApiRollCall + \"Persons\"\r\n\r\nexport default{    \r\n    async getPersonsAsync(){\r\n        var persons\r\n\r\n        await  fetch(url)        \r\n        .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              throw new Error('Error en la solicitud.');\r\n              //console.log(response.text())\r\n              //throw response.text()\r\n            }\r\n        })\r\n        .then(data => {\r\n            //console.log(data)\r\n            persons = data\r\n        })\r\n        .catch(error =>{ throw error})\r\n\r\n        return persons\r\n    },\r\n    async setPersonAsync(person){\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"accept\", \"*/*\");\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({            \r\n            //\"name\": person.name,\r\n            \"lastName\": person.lastName,\r\n            \"genere\": person.genere,\r\n            \"birthday\": person.birthday\r\n        });\r\n        await fetch(url,{\r\n            method: 'POST',\r\n            headers:  myHeaders,\r\n            body: raw\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n                console.log(\"No es ok\")\r\n                console.log(response.json().errors)\r\n                console.log(response.text())\r\n            //   response.text().then(errorMessage => {\r\n            //     console.error('Mensaje de error:', errorMessage)\r\n            //   })\r\n            //  throw new Error('Error en la solicitud.', response);\r\n              //throw response.text()\r\n            }\r\n        })\r\n        .then(data => { console.log(data) })\r\n        .catch(error =>{ \r\n            console.log(error)\r\n            throw error\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,MAAMC,GAAG,GAAGD,OAAO,CAACE,cAAc,GAAG,SAAS;AAE9C,eAAc;EACV,MAAMC,eAAe,GAAE;IACnB,IAAIC,OAAO;IAEX,MAAOC,KAAK,CAACJ,GAAG,CAAC,CAChBK,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QACzC;QACA;MACF;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACV;MACAP,OAAO,GAAGO,IAAI;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;MAAE,MAAMA,KAAK;IAAA,CAAC,CAAC;IAE9B,OAAOT,OAAO;EAClB,CAAC;EACD,MAAMU,cAAc,CAACC,MAAM,EAAC;IACxB,IAAIC,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;IACjCF,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACrB;MACA,UAAU,EAAEN,MAAM,CAACO,QAAQ;MAC3B,QAAQ,EAAEP,MAAM,CAACQ,MAAM;MACvB,UAAU,EAAER,MAAM,CAACS;IACvB,CAAC,CAAC;IACF,MAAMnB,KAAK,CAACJ,GAAG,EAAC;MACZwB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAGV,SAAS;MACnBW,IAAI,EAAER;IACV,CAAC,CAAC,CACDb,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACHmB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvBD,OAAO,CAACC,GAAG,CAACtB,QAAQ,CAACE,IAAI,EAAE,CAACqB,MAAM,CAAC;QACnCF,OAAO,CAACC,GAAG,CAACtB,QAAQ,CAACwB,IAAI,EAAE,CAAC;QAChC;QACA;QACA;QACA;QACE;MACF;IACJ,CAAC,CAAC,CACDzB,IAAI,CAACK,IAAI,IAAI;MAAEiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC;IAAC,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAG;MACXe,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;MAClB,MAAMA,KAAK;IACf,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}